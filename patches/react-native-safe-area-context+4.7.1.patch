diff --git a/node_modules/react-native-safe-area-context/android/src/main/java/com/th3rdwave/safeareacontext/SafeAreaUtils.kt b/node_modules/react-native-safe-area-context/android/src/main/java/com/th3rdwave/safeareacontext/SafeAreaUtils.kt
index 0203be6..b84dab8 100644
--- a/node_modules/react-native-safe-area-context/android/src/main/java/com/th3rdwave/safeareacontext/SafeAreaUtils.kt
+++ b/node_modules/react-native-safe-area-context/android/src/main/java/com/th3rdwave/safeareacontext/SafeAreaUtils.kt
@@ -6,8 +6,6 @@ import android.view.ViewGroup
 import android.view.WindowInsets
 import androidx.annotation.RequiresApi
 import java.lang.IllegalArgumentException
-import kotlin.math.max
-import kotlin.math.min
 
 @RequiresApi(Build.VERSION_CODES.R)
 private fun getRootWindowInsetsCompatR(rootView: View): EdgeInsets? {
@@ -36,7 +34,7 @@ private fun getRootWindowInsetsCompatM(rootView: View): EdgeInsets? {
       // want to be consistent with iOS. Using the min value makes sure we
       // never get the keyboard offset while still working with devices that
       // hide the navigation bar.
-      bottom = min(insets.systemWindowInsetBottom, insets.stableInsetBottom).toFloat(),
+      bottom = minOf(insets.systemWindowInsetBottom, insets.stableInsetBottom).toFloat(),
       left = insets.systemWindowInsetLeft.toFloat())
 }
 
@@ -72,10 +70,18 @@ fun getSafeAreaInsets(view: View): EdgeInsets? {
   val visibleRect = android.graphics.Rect()
   view.getGlobalVisibleRect(visibleRect)
   return EdgeInsets(
-      top = max(windowInsets.top - visibleRect.top, 0f),
-      right = max(min(visibleRect.left + view.width - windowWidth, 0f) + windowInsets.right, 0f),
-      bottom = max(min(visibleRect.top + view.height - windowHeight, 0f) + windowInsets.bottom, 0f),
-      left = max(windowInsets.left - visibleRect.left, 0f))
+      top = maxOf(windowInsets.top - visibleRect.top, windowInsets.top, 0f),
+      right =
+          maxOf(
+              minOf(visibleRect.left + view.width - windowWidth, 0f) + windowInsets.right,
+              windowInsets.right,
+              0f),
+      bottom =
+          maxOf(
+              minOf(visibleRect.top + view.height - windowHeight, 0f) + windowInsets.bottom,
+              windowInsets.bottom,
+              0f),
+      left = maxOf(windowInsets.left - visibleRect.left, windowInsets.left, 0f))
 }
 
 fun getFrame(rootView: ViewGroup, view: View): Rect? {
